{"dependencies":[{"name":"./internal/_curryN","loc":{"line":1,"column":20}},{"name":"./internal/_reduce","loc":{"line":2,"column":20}},{"name":"./internal/_reduced","loc":{"line":3,"column":21}}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _curryN2 = require(\"./internal/_curryN\");\n\nvar _curryN3 = _interopRequireDefault(_curryN2);\n\nvar _reduce2 = require(\"./internal/_reduce\");\n\nvar _reduce3 = _interopRequireDefault(_reduce2);\n\nvar _reduced2 = require(\"./internal/_reduced\");\n\nvar _reduced3 = _interopRequireDefault(_reduced2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Like [`reduce`](#reduce), `reduceWhile` returns a single item by iterating\n * through the list, successively calling the iterator function. `reduceWhile`\n * also takes a predicate that is evaluated before each step. If the predicate\n * returns `false`, it \"short-circuits\" the iteration and returns the current\n * value of the accumulator.\n *\n * @func\n * @memberOf R\n * @since v0.22.0\n * @category List\n * @sig ((a, b) -> Boolean) -> ((a, b) -> a) -> a -> [b] -> a\n * @param {Function} pred The predicate. It is passed the accumulator and the\n *        current element.\n * @param {Function} fn The iterator function. Receives two values, the\n *        accumulator and the current element.\n * @param {*} a The accumulator value.\n * @param {Array} list The list to iterate over.\n * @return {*} The final, accumulated value.\n * @see R.reduce, R.reduced\n * @example\n *\n *      var isOdd = (acc, x) => x % 2 === 1;\n *      var xs = [1, 3, 5, 60, 777, 800];\n *      R.reduceWhile(isOdd, R.add, 0, xs); //=> 9\n *\n *      var ys = [2, 4, 6]\n *      R.reduceWhile(isOdd, R.add, 111, ys); //=> 111\n */\nvar reduceWhile = /*#__PURE__*/(0, _curryN3.default)(4, [], function _reduceWhile(pred, fn, a, list) {\n  return (0, _reduce3.default)(function (acc, x) {\n    return pred(acc, x) ? fn(acc, x) : (0, _reduced3.default)(acc);\n  }, a, list);\n});\nexports.default = reduceWhile;"},"hash":"274c6b02dbdac61945c08514d9b7220a"}