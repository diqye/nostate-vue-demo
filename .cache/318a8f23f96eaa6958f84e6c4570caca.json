{"dependencies":[{"name":"./internal/_curry2","loc":{"line":1,"column":20}},{"name":"./internal/_isArray","loc":{"line":2,"column":21}},{"name":"./equals","loc":{"line":3,"column":19}}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _curry = require(\"./internal/_curry2\");\n\nvar _curry3 = _interopRequireDefault(_curry);\n\nvar _isArray2 = require(\"./internal/_isArray\");\n\nvar _isArray3 = _interopRequireDefault(_isArray2);\n\nvar _equals = require(\"./equals\");\n\nvar _equals2 = _interopRequireDefault(_equals);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Returns the position of the last occurrence of an item in an array, or -1 if\n * the item is not included in the array. [`R.equals`](#equals) is used to\n * determine equality.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig a -> [a] -> Number\n * @param {*} target The item to find.\n * @param {Array} xs The array to search in.\n * @return {Number} the index of the target, or -1 if the target is not found.\n * @see R.indexOf\n * @example\n *\n *      R.lastIndexOf(3, [-1,3,3,0,1,2,3,4]); //=> 6\n *      R.lastIndexOf(10, [1,2,3,4]); //=> -1\n */\nvar lastIndexOf = /*#__PURE__*/(0, _curry3.default)(function lastIndexOf(target, xs) {\n  if (typeof xs.lastIndexOf === 'function' && !(0, _isArray3.default)(xs)) {\n    return xs.lastIndexOf(target);\n  } else {\n    var idx = xs.length - 1;\n    while (idx >= 0) {\n      if ((0, _equals2.default)(xs[idx], target)) {\n        return idx;\n      }\n      idx -= 1;\n    }\n    return -1;\n  }\n});\nexports.default = lastIndexOf;"},"hash":"9abf46779f4766ea0d3d3a54139d6d8d"}