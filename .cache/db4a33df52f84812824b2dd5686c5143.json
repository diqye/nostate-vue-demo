{"dependencies":[{"name":"./internal/_curry2","loc":{"line":1,"column":20}},{"name":"./internal/_dispatchable","loc":{"line":2,"column":26}},{"name":"./internal/_xtap","loc":{"line":3,"column":18}}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _curry = require(\"./internal/_curry2\");\n\nvar _curry3 = _interopRequireDefault(_curry);\n\nvar _dispatchable2 = require(\"./internal/_dispatchable\");\n\nvar _dispatchable3 = _interopRequireDefault(_dispatchable2);\n\nvar _xtap2 = require(\"./internal/_xtap\");\n\nvar _xtap3 = _interopRequireDefault(_xtap2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Runs the given function with the supplied object, then returns the object.\n *\n * Acts as a transducer if a transformer is given as second parameter.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig (a -> *) -> a -> a\n * @param {Function} fn The function to call with `x`. The return value of `fn` will be thrown away.\n * @param {*} x\n * @return {*} `x`.\n * @example\n *\n *      var sayX = x => console.log('x is ' + x);\n *      R.tap(sayX, 100); //=> 100\n *      // logs 'x is 100'\n * @symb R.tap(f, a) = a\n */\nvar tap = /*#__PURE__*/(0, _curry3.default)( /*#__PURE__*/(0, _dispatchable3.default)([], _xtap3.default, function tap(fn, x) {\n  fn(x);\n  return x;\n}));\nexports.default = tap;"},"hash":"356a3e1a0689b8bca59415d15bc39701"}