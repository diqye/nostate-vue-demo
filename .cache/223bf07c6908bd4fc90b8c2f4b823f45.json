{"dependencies":[{"name":"./internal/_curry1","loc":{"line":1,"column":20}},{"name":"./assocPath","loc":{"line":2,"column":22}},{"name":"./lens","loc":{"line":3,"column":17}},{"name":"./path","loc":{"line":4,"column":17}}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _curry = require(\"./internal/_curry1\");\n\nvar _curry2 = _interopRequireDefault(_curry);\n\nvar _assocPath = require(\"./assocPath\");\n\nvar _assocPath2 = _interopRequireDefault(_assocPath);\n\nvar _lens = require(\"./lens\");\n\nvar _lens2 = _interopRequireDefault(_lens);\n\nvar _path = require(\"./path\");\n\nvar _path2 = _interopRequireDefault(_path);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Returns a lens whose focus is the specified path.\n *\n * @func\n * @memberOf R\n * @since v0.19.0\n * @category Object\n * @typedefn Idx = String | Int\n * @typedefn Lens s a = Functor f => (a -> f a) -> s -> f s\n * @sig [Idx] -> Lens s a\n * @param {Array} path The path to use.\n * @return {Lens}\n * @see R.view, R.set, R.over\n * @example\n *\n *      var xHeadYLens = R.lensPath(['x', 0, 'y']);\n *\n *      R.view(xHeadYLens, {x: [{y: 2, z: 3}, {y: 4, z: 5}]});\n *      //=> 2\n *      R.set(xHeadYLens, 1, {x: [{y: 2, z: 3}, {y: 4, z: 5}]});\n *      //=> {x: [{y: 1, z: 3}, {y: 4, z: 5}]}\n *      R.over(xHeadYLens, R.negate, {x: [{y: 2, z: 3}, {y: 4, z: 5}]});\n *      //=> {x: [{y: -2, z: 3}, {y: 4, z: 5}]}\n */\nvar lensPath = /*#__PURE__*/(0, _curry2.default)(function lensPath(p) {\n  return (0, _lens2.default)((0, _path2.default)(p), (0, _assocPath2.default)(p));\n});\nexports.default = lensPath;"},"hash":"fee6107b83d1a1fb35ebd966db600997"}