{"dependencies":[{"name":"./internal/_curry2","loc":{"line":1,"column":20}},{"name":"./equals","loc":{"line":2,"column":19}},{"name":"./map","loc":{"line":3,"column":16}},{"name":"./where","loc":{"line":4,"column":18}}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _curry = require(\"./internal/_curry2\");\n\nvar _curry3 = _interopRequireDefault(_curry);\n\nvar _equals = require(\"./equals\");\n\nvar _equals2 = _interopRequireDefault(_equals);\n\nvar _map = require(\"./map\");\n\nvar _map2 = _interopRequireDefault(_map);\n\nvar _where = require(\"./where\");\n\nvar _where2 = _interopRequireDefault(_where);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Takes a spec object and a test object; returns true if the test satisfies\n * the spec, false otherwise. An object satisfies the spec if, for each of the\n * spec's own properties, accessing that property of the object gives the same\n * value (in [`R.equals`](#equals) terms) as accessing that property of the\n * spec.\n *\n * `whereEq` is a specialization of [`where`](#where).\n *\n * @func\n * @memberOf R\n * @since v0.14.0\n * @category Object\n * @sig {String: *} -> {String: *} -> Boolean\n * @param {Object} spec\n * @param {Object} testObj\n * @return {Boolean}\n * @see R.propEq, R.where\n * @example\n *\n *      // pred :: Object -> Boolean\n *      var pred = R.whereEq({a: 1, b: 2});\n *\n *      pred({a: 1});              //=> false\n *      pred({a: 1, b: 2});        //=> true\n *      pred({a: 1, b: 2, c: 3});  //=> true\n *      pred({a: 1, b: 1});        //=> false\n */\nvar whereEq = /*#__PURE__*/(0, _curry3.default)(function whereEq(spec, testObj) {\n  return (0, _where2.default)((0, _map2.default)(_equals2.default, spec), testObj);\n});\nexports.default = whereEq;"},"hash":"d09b1925a28216c821b0f41df1f59273"}