{"dependencies":[{"name":"./internal/_curry2","loc":{"line":1,"column":20}},{"name":"./internal/_reduce","loc":{"line":2,"column":20}},{"name":"./keys","loc":{"line":3,"column":17}}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _curry = require(\"./internal/_curry2\");\n\nvar _curry3 = _interopRequireDefault(_curry);\n\nvar _reduce2 = require(\"./internal/_reduce\");\n\nvar _reduce3 = _interopRequireDefault(_reduce2);\n\nvar _keys = require(\"./keys\");\n\nvar _keys2 = _interopRequireDefault(_keys);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * An Object-specific version of [`map`](#map). The function is applied to three\n * arguments: *(value, key, obj)*. If only the value is significant, use\n * [`map`](#map) instead.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category Object\n * @sig ((*, String, Object) -> *) -> Object -> Object\n * @param {Function} fn\n * @param {Object} obj\n * @return {Object}\n * @see R.map\n * @example\n *\n *      var values = { x: 1, y: 2, z: 3 };\n *      var prependKeyAndDouble = (num, key, obj) => key + (num * 2);\n *\n *      R.mapObjIndexed(prependKeyAndDouble, values); //=> { x: 'x2', y: 'y4', z: 'z6' }\n */\nvar mapObjIndexed = /*#__PURE__*/(0, _curry3.default)(function mapObjIndexed(fn, obj) {\n  return (0, _reduce3.default)(function (acc, key) {\n    acc[key] = fn(obj[key], key, obj);\n    return acc;\n  }, {}, (0, _keys2.default)(obj));\n});\nexports.default = mapObjIndexed;"},"hash":"590926b24753e5c9c740434fff3c2299"}