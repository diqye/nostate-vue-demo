{"dependencies":[{"name":"./internal/_curry3","loc":{"line":1,"column":20}},{"name":"./adjust","loc":{"line":2,"column":19}},{"name":"./always","loc":{"line":3,"column":19}}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _curry = require(\"./internal/_curry3\");\n\nvar _curry2 = _interopRequireDefault(_curry);\n\nvar _adjust = require(\"./adjust\");\n\nvar _adjust2 = _interopRequireDefault(_adjust);\n\nvar _always = require(\"./always\");\n\nvar _always2 = _interopRequireDefault(_always);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Returns a new copy of the array with the element at the provided index\n * replaced with the given value.\n *\n * @func\n * @memberOf R\n * @since v0.14.0\n * @category List\n * @sig Number -> a -> [a] -> [a]\n * @param {Number} idx The index to update.\n * @param {*} x The value to exist at the given index of the returned array.\n * @param {Array|Arguments} list The source array-like object to be updated.\n * @return {Array} A copy of `list` with the value at index `idx` replaced with `x`.\n * @see R.adjust\n * @example\n *\n *      R.update(1, 11, [0, 1, 2]);     //=> [0, 11, 2]\n *      R.update(1)(11)([0, 1, 2]);     //=> [0, 11, 2]\n * @symb R.update(-1, a, [b, c]) = [b, a]\n * @symb R.update(0, a, [b, c]) = [a, c]\n * @symb R.update(1, a, [b, c]) = [b, a]\n */\nvar update = /*#__PURE__*/(0, _curry2.default)(function update(idx, x, list) {\n  return (0, _adjust2.default)((0, _always2.default)(x), idx, list);\n});\nexports.default = update;"},"hash":"02a808bf94203425fc18ceb5fa42f501"}