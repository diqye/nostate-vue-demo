{"dependencies":[{"name":"./internal/_curry2","loc":{"line":1,"column":20}},{"name":"./internal/_map","loc":{"line":2,"column":17}},{"name":"./curryN","loc":{"line":3,"column":19}},{"name":"./max","loc":{"line":4,"column":16}},{"name":"./pluck","loc":{"line":5,"column":18}},{"name":"./reduce","loc":{"line":6,"column":19}}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _curry = require(\"./internal/_curry2\");\n\nvar _curry3 = _interopRequireDefault(_curry);\n\nvar _map2 = require(\"./internal/_map\");\n\nvar _map3 = _interopRequireDefault(_map2);\n\nvar _curryN = require(\"./curryN\");\n\nvar _curryN2 = _interopRequireDefault(_curryN);\n\nvar _max = require(\"./max\");\n\nvar _max2 = _interopRequireDefault(_max);\n\nvar _pluck = require(\"./pluck\");\n\nvar _pluck2 = _interopRequireDefault(_pluck);\n\nvar _reduce = require(\"./reduce\");\n\nvar _reduce2 = _interopRequireDefault(_reduce);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Accepts a converging function and a list of branching functions and returns\n * a new function. When invoked, this new function is applied to some\n * arguments, each branching function is applied to those same arguments. The\n * results of each branching function are passed as arguments to the converging\n * function to produce the return value.\n *\n * @func\n * @memberOf R\n * @since v0.4.2\n * @category Function\n * @sig ((x1, x2, ...) -> z) -> [((a, b, ...) -> x1), ((a, b, ...) -> x2), ...] -> (a -> b -> ... -> z)\n * @param {Function} after A function. `after` will be invoked with the return values of\n *        `fn1` and `fn2` as its arguments.\n * @param {Array} functions A list of functions.\n * @return {Function} A new function.\n * @see R.useWith\n * @example\n *\n *      var average = R.converge(R.divide, [R.sum, R.length])\n *      average([1, 2, 3, 4, 5, 6, 7]) //=> 4\n *\n *      var strangeConcat = R.converge(R.concat, [R.toUpper, R.toLower])\n *      strangeConcat(\"Yodel\") //=> \"YODELyodel\"\n *\n * @symb R.converge(f, [g, h])(a, b) = f(g(a, b), h(a, b))\n */\nvar converge = /*#__PURE__*/(0, _curry3.default)(function converge(after, fns) {\n  return (0, _curryN2.default)((0, _reduce2.default)(_max2.default, 0, (0, _pluck2.default)('length', fns)), function () {\n    var args = arguments;\n    var context = this;\n    return after.apply(context, (0, _map3.default)(function (fn) {\n      return fn.apply(context, args);\n    }, fns));\n  });\n});\nexports.default = converge;"},"hash":"4755dd4479f8fa43e6a652c9de423441"}