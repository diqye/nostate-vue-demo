{"dependencies":[{"name":"./internal/_cloneRegExp","loc":{"line":1,"column":25}},{"name":"./internal/_curry2","loc":{"line":2,"column":20}},{"name":"./internal/_isRegExp","loc":{"line":3,"column":22}},{"name":"./toString","loc":{"line":4,"column":21}}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _cloneRegExp2 = require(\"./internal/_cloneRegExp\");\n\nvar _cloneRegExp3 = _interopRequireDefault(_cloneRegExp2);\n\nvar _curry = require(\"./internal/_curry2\");\n\nvar _curry3 = _interopRequireDefault(_curry);\n\nvar _isRegExp2 = require(\"./internal/_isRegExp\");\n\nvar _isRegExp3 = _interopRequireDefault(_isRegExp2);\n\nvar _toString = require(\"./toString\");\n\nvar _toString2 = _interopRequireDefault(_toString);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Determines whether a given string matches a given regular expression.\n *\n * @func\n * @memberOf R\n * @since v0.12.0\n * @category String\n * @sig RegExp -> String -> Boolean\n * @param {RegExp} pattern\n * @param {String} str\n * @return {Boolean}\n * @see R.match\n * @example\n *\n *      R.test(/^x/, 'xyz'); //=> true\n *      R.test(/^y/, 'xyz'); //=> false\n */\nvar test = /*#__PURE__*/(0, _curry3.default)(function test(pattern, str) {\n  if (!(0, _isRegExp3.default)(pattern)) {\n    throw new TypeError('‘test’ requires a value of type RegExp as its first argument; received ' + (0, _toString2.default)(pattern));\n  }\n  return (0, _cloneRegExp3.default)(pattern).test(str);\n});\nexports.default = test;"},"hash":"654181898280ff7e536619ddbdd87189"}