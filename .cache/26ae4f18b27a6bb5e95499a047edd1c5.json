{"dependencies":[{"name":"./internal/_curry1","loc":{"line":1,"column":20}},{"name":"./internal/_isArguments","loc":{"line":2,"column":25}},{"name":"./internal/_isArray","loc":{"line":3,"column":21}},{"name":"./internal/_isObject","loc":{"line":4,"column":22}},{"name":"./internal/_isString","loc":{"line":5,"column":22}}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _curry = require(\"./internal/_curry1\");\n\nvar _curry2 = _interopRequireDefault(_curry);\n\nvar _isArguments2 = require(\"./internal/_isArguments\");\n\nvar _isArguments3 = _interopRequireDefault(_isArguments2);\n\nvar _isArray2 = require(\"./internal/_isArray\");\n\nvar _isArray3 = _interopRequireDefault(_isArray2);\n\nvar _isObject2 = require(\"./internal/_isObject\");\n\nvar _isObject3 = _interopRequireDefault(_isObject2);\n\nvar _isString2 = require(\"./internal/_isString\");\n\nvar _isString3 = _interopRequireDefault(_isString2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Returns the empty value of its argument's type. Ramda defines the empty\n * value of Array (`[]`), Object (`{}`), String (`''`), and Arguments. Other\n * types are supported if they define `<Type>.empty`,\n * `<Type>.prototype.empty` or implement the\n * [FantasyLand Monoid spec](https://github.com/fantasyland/fantasy-land#monoid).\n *\n * Dispatches to the `empty` method of the first argument, if present.\n *\n * @func\n * @memberOf R\n * @since v0.3.0\n * @category Function\n * @sig a -> a\n * @param {*} x\n * @return {*}\n * @example\n *\n *      R.empty(Just(42));      //=> Nothing()\n *      R.empty([1, 2, 3]);     //=> []\n *      R.empty('unicorns');    //=> ''\n *      R.empty({x: 1, y: 2});  //=> {}\n */\nvar empty = /*#__PURE__*/(0, _curry2.default)(function empty(x) {\n  return x != null && typeof x['fantasy-land/empty'] === 'function' ? x['fantasy-land/empty']() : x != null && x.constructor != null && typeof x.constructor['fantasy-land/empty'] === 'function' ? x.constructor['fantasy-land/empty']() : x != null && typeof x.empty === 'function' ? x.empty() : x != null && x.constructor != null && typeof x.constructor.empty === 'function' ? x.constructor.empty() : (0, _isArray3.default)(x) ? [] : (0, _isString3.default)(x) ? '' : (0, _isObject3.default)(x) ? {} : (0, _isArguments3.default)(x) ? function () {\n    return arguments;\n  }() :\n  // else\n  void 0;\n});\nexports.default = empty;"},"hash":"0ec7073cb8a0646bdb410e558e50aea3"}