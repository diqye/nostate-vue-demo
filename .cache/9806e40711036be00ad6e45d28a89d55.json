{"dependencies":[{"name":"./lift","loc":{"line":1,"column":17}},{"name":"./not","loc":{"line":2,"column":16}}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _lift = require(\"./lift\");\n\nvar _lift2 = _interopRequireDefault(_lift);\n\nvar _not = require(\"./not\");\n\nvar _not2 = _interopRequireDefault(_not);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Takes a function `f` and returns a function `g` such that if called with the same arguments\n * when `f` returns a \"truthy\" value, `g` returns `false` and when `f` returns a \"falsy\" value `g` returns `true`.\n *\n * `R.complement` may be applied to any functor\n *\n * @func\n * @memberOf R\n * @since v0.12.0\n * @category Logic\n * @sig (*... -> *) -> (*... -> Boolean)\n * @param {Function} f\n * @return {Function}\n * @see R.not\n * @example\n *\n *      var isNotNil = R.complement(R.isNil);\n *      isNil(null); //=> true\n *      isNotNil(null); //=> false\n *      isNil(7); //=> false\n *      isNotNil(7); //=> true\n */\nvar complement = /*#__PURE__*/(0, _lift2.default)(_not2.default);\nexports.default = complement;"},"hash":"b150aa59963243d8f4bbc862b85e03f1"}